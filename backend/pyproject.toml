[project]
name = "fabricat-backend"
version = "0.1.0"
description = "Backend for Fabricat game"
authors = [
    { name = "Mikhail Polevoda", email = "mihail.polevoda@gmail.com" },
    { name = "Yulia Yanaeva", email = "anaevaulia5@gmail.com" },
    { name = "Vika Kuzina", email = "kuzina2004@internet.ru" },
]
requires-python = ">=3.12,<3.13"
dependencies = []

[dependency-groups]
dev = [
    "pyright>=1.1.406",
    "ruff>=0.14.2",
    "ty>=0.0.1a24",
]

[project.scripts]
fabricat-backend = "fabricat_backend:main"
start = "fabricat_backend:main"
serve = "fabricat_backend:main"

[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".vscode",
    ".venv",
    "venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
]

line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["COM812", "TD002", "FIX002"]

exclude = []

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S101", "PLR2004", "ANN201"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.pyright]
venvPath = "."
venv = ".venv"
exclude = ["./.venv"]
pythonVersion = "3.12"

[tool.pytest.ini_options]
markers = [
    "unit: unit tests",
    "integration: integration tests"
]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
